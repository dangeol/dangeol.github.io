#!/bin/bash
#
# This is a dev script; don't run this unless you are me.
#
# There are build scripts in each directory that will create the xpi files.
#
# Please see the README file for more information.

xhtmlu=`gdialog --title "Update Notes" --inputbox "Enter Update Notes" 300 450 2>&1`
if [ "$xhtmlu" == "" ]
then
echo "no update notes"
exit 0
fi

git commit -a -m "$xhtmlu"
git checkout 2
git merge master
git status

cd digitalpalireader

oldv=`cat version`
rdfv=`zenity --entry --title="Version Number" --entry-text="$oldv" --text="Enter Version Number"`
if [ "$rdfv" == "" ]
then
rdfv=$oldv
fi

update=""
if [ "$oldv" != "$rdfv" ] 
then git tag $rdfv
update=`gdialog --title "New Version Description" --inputbox "Enter Version Info" 300 450 2>&1`
fi



# Firefox

echo $rdfv > version

echo "var version = '$rdfv';" > content/version.js

echo '<?xml version="1.0" encoding="UTF-8"?>
<RDF xmlns="http://www.w3.org/1999/02/22-rdf-syntax-ns#" 
 xmlns:em="http://www.mozilla.org/2004/em-rdf#">
  <Description about="urn:mozilla:install-manifest">
    <em:id>digitalpalireader@noah.yuttadhammo</em:id>
    <em:name>Digital Pali Reader</em:name>
    <em:version>'$rdfv'</em:version>
    <em:creator>Noah Yuttadhammo</em:creator>
    <em:description>Tool for reading the Pali Canon and commentaries using dictionary lookup and automatic word recognition.</em:description>
    <em:homepageURL>http://pali.sirimangalo.org/</em:homepageURL>
    <em:updateURL>http://pali.sirimangalo.org/digitalpalireader.rdf</em:updateURL>
    <em:optionsURL>chrome://digitalpalireader/content/prefs.xul</em:optionsURL>
    <em:iconURL>chrome://digitalpalireader/content/images/logo64.png</em:iconURL>
    <em:targetApplication>
      <Description>
        <em:id>{ec8030f7-c20a-464f-9b0e-13a3a9e97384}</em:id> <!-- firefox -->
        <em:minVersion>4</em:minVersion>
        <em:maxVersion>*</em:maxVersion>
      </Description>
    </em:targetApplication>
    <em:updateKey>
    MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDdroA7ONVpoCaPoYilrW++MPgq
	p7EWBn1q1xfuZ0kwu/5KJU1SSB/9x3Oh/6KWKkQ3shW4Ux+yoBi78xtWkZmQqUyW
	eWHqHhdma5A09gtMv8eIVNaM21+7HHXqhKLYAcRp0qfaLfK8LWj9oRS2xjXSHTlp
	50wghuHGEe67058qfQIDAQAB
	</em:updateKey>
    <em:bootstrap>false</em:bootstrap>
  </Description>
</RDF>' > install.rdf

echo '<?xml version="1.0" encoding="UTF-8"?>

<RDF:RDF xmlns:RDF="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns:em="http://www.mozilla.org/2004/em-rdf#">
  <RDF:Description about="urn:mozilla:extension:digitalpalireader@noah.yuttadhammo">
    <em:updates>
      <RDF:Seq>
        <RDF:li>
          <RDF:Description>
            <em:version>'$rdfv'</em:version>
            <em:targetApplication>
              <RDF:Description>
                <em:id>{ec8030f7-c20a-464f-9b0e-13a3a9e97384}</em:id>
                <em:minVersion>4</em:minVersion>
                <em:maxVersion>*</em:maxVersion>
                <em:updateLink>http://pali.sirimangalo.org/digitalpalireader.rdf</em:updateLink>
                <em:updateInfoURL>http://pali.sirimangalo.org/digitalpalireader.xhtml</em:updateInfoURL>
              </RDF:Description>
            </em:targetApplication>
          </RDF:Description>
        </RDF:li>
      </RDF:Seq>
    </em:updates>
  </RDF:Description>
</RDF:RDF>' > digitalpalireader.rdf

if [ "$update" != "" ]
    then
    echo "$update" > digitalpalireader.xhtml
    IFS=$'\t\n'
    j=`tail -n +3 content/news.xml | head -n 4`
    echo -ne '<?xml version="1.0" encoding="UTF-8"?>\n<update>\n<news>'$update'</news>\n' > content/news.xml
    for i in $j
        do echo $i >> content/news.xml
    done
    echo '</update>' >> content/news.xml
else
echo "$xhtmlu" > digitalpalireader.xhtml
fi

echo 'This is the SourceForge archive for the Digital Pali Reader.  You will find the latest release in the "DPR" folder.

The latest version is '$rdfv' and the latest commit message is:

'$xhtmlu'

Note that as of version 2.0, the Tipitaka archives must be downloaded seperately, either via the DPR interface itself, or by visiting http://pali.sirimangalo.org/

' > ../sf.txt

# git

cd ..

if [ "$xhtmlu" != "none" ]
then
git add .
git commit -m "$xhtmlu" -a
fi
git push

git checkout master
git merge 2
